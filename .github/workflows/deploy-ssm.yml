name: Deploy to EC2 using AWS Systems Manager

on:
  push:
    branches: [ main ]

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install flake8
      - name: Run tests
        env:
          DEV_SECRET_KEY: ${{ secrets.DEV_SECRET_KEY }}
          DEV_DB_NAME: ${{ secrets.DEV_DB_NAME }}
          DEV_DB_USER: ${{ secrets.DEV_DB_USER }}
          DEV_DB_PASSWORD: ${{ secrets.DEV_DB_PASSWORD }}
        run: python manage.py test
      - name: Run linter
        run: flake8 .

  deploy:
    needs: test-and-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Deploy to EC2 using AWS Systems Manager
        run: |
          aws ssm send-command \
            --instance-ids "${{ secrets.EC2_INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --parameters '{
              "commands": [
                "echo \"Starting deployment process...\"",
                "cd /opt/website",
                "echo \"Current directory: $(pwd)\"",
                "echo \"Setting up ssh-agent...\"",
                "eval $(ssh-agent -s)",
                "echo \"${{ secrets.SSH_PASSPHRASE }}\" | ssh-add /home/webapps/.ssh/web_ec2_key",
                "echo \"Fetching latest changes...\"",
                "sudo -u webapps git fetch --all",
                "echo \"Resetting to origin/main...\"",
                "sudo -u webapps git reset --hard origin/main",
                "echo \"Current git status:\"",
                "sudo -u webapps git status",
                "echo \"Current git log:\"",
                "sudo -u webapps git log -n 1",
                "echo \"Logging into DockerHub...\"",
                "echo \"${{ secrets.DOCKERHUB_TOKEN }}\" | sudo -u webapps docker login -u \"${{ secrets.DOCKERHUB_USERNAME }}\" --password-stdin",
                "echo \"Stopping current containers...\"",
                "sudo -u webapps docker-compose -f docker-compose.prod.yml down",
                "echo \"Building and starting new containers...\"",
                "sudo -u webapps docker-compose -f docker-compose.prod.yml up -d --build",
                "echo \"Running database migrations...\"",
                "sudo -u webapps docker-compose -f docker-compose.prod.yml exec -T web python manage.py migrate",
                "echo \"Collecting static files...\"",
                "sudo -u webapps docker-compose -f docker-compose.prod.yml exec -T web python manage.py collectstatic --noinput",
                "echo \"Restarting Nginx...\"",
                "sudo systemctl restart nginx",
                "echo \"Logging out of DockerHub...\"",
                "sudo -u webapps docker logout",
                "ssh-agent -k",
                "echo \"Deployment process completed.\""
              ]
            }' \
            --output text
      - name: Confirm deployment completion
        run: echo "Deployment process completed successfully"
