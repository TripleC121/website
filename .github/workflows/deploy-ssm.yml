name: Deploy to EC2 using AWS Systems Manager

on:
  push:
    branches: [ main ]

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install flake8

    - name: Run tests
      env:
        DJANGO_SETTINGS_MODULE: chesley_web.settings.development
        DEV_SECRET_KEY: ${{ secrets.DEV_SECRET_KEY }}
        DEV_DB_NAME: ${{ secrets.DEV_DB_NAME }}
        DEV_DB_USER: ${{ secrets.DEV_DB_USER }}
        DEV_DB_PASSWORD: ${{ secrets.DEV_DB_PASSWORD }}
      run: python manage.py test

    - name: Run linter
      run: flake8 .

  deploy:
    needs: test-and-lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Deploy to EC2 using AWS Systems Manager
      run: |
        aws ssm send-command \
          --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
          --document-name "AWS-RunShellScript" \
          --parameters commands=[
            "cd /opt/website",
            "sudo -u webapps git pull origin main",
            "echo '${{ secrets.DOCKERHUB_TOKEN }}' | sudo -u webapps docker login -u '${{ secrets.DOCKERHUB_USERNAME }}' --password-stdin",
            "sudo -u webapps docker-compose -f docker-compose.prod.yml up -d --build",
            "sudo -u webapps docker-compose -f docker-compose.prod.yml exec -T web python manage.py migrate",
            "sudo -u webapps docker-compose -f docker-compose.prod.yml exec -T web python manage.py collectstatic --noinput",
            "sudo systemctl restart nginx",
            "sudo -u webapps docker logout"
          ] \
          --output text

    - name: Verify Deployment
      run: |
        response=$(curl -sS -o /dev/null -w "%{http_code}" https://${{ secrets.EC2_HOST }})
        if [ $response = "200" ]; then
          echo "Deployment verified successfully!"
        else
          echo "Deployment verification failed. HTTP status code: $response"
          exit 1
        fi
