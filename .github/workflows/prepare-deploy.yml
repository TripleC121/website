name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/chesley-web:${{ github.sha }}

    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} << EOF
          # Pull the latest Docker image
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/chesley-web:${{ github.sha }}

          # Backup the database (simplified for now)
          docker exec \$(docker ps -q --filter name=db) pg_dump -U \$DB_USER \$DB_NAME > /home/webapps/backups/backup_\$(date +%Y%m%d_%H%M%S).sql

          # Stop the current container
          docker stop \$(docker ps -q --filter name=web) || true
          docker rm \$(docker ps -aq --filter name=web) || true

          # Start the new container
          docker run -d --name web \
            -e DJANGO_SETTINGS_MODULE=chesley_web.settings.production \
            -e PROD_SECRET_KEY="${{ secrets.PROD_SECRET_KEY }}" \
            -e PROD_DB_NAME="${{ secrets.PROD_DB_NAME }}" \
            -e PROD_DB_USER="${{ secrets.PROD_DB_USER }}" \
            -e PROD_DB_PASSWORD="${{ secrets.PROD_DB_PASSWORD }}" \
            -e PROD_DB_HOST="${{ secrets.PROD_DB_HOST }}" \
            -e PROD_ALLOWED_HOSTS="${{ secrets.PROD_ALLOWED_HOSTS }}" \
            -v /opt/website/staticfiles:/app/staticfiles \
            -v /opt/website/media:/app/media \
            -p 8000:8000 \
            ${{ secrets.DOCKERHUB_USERNAME }}/chesley-web:${{ github.sha }}

          # Run migrations
          docker exec web python manage.py migrate

          # Collect static files
          docker exec web python manage.py collectstatic --noinput

          # Restart Nginx
          sudo systemctl restart nginx
EOF

    - name: Verify Deployment
      env:
        HOST: ${{ secrets.EC2_HOST }}
      run: |
        response=\$(curl -sS -o /dev/null -w "%{http_code}" https://\${HOST})
        if [ \$response = "200" ]; then
          echo "Deployment successful!"
        else
          echo "Deployment may have failed. Please check your EC2 instance."
          exit 1
        fi
